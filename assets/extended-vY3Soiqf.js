import{j as t}from"./v-react-BVuqIsxp.js";import{j as g,_ as F,i as N,k as L,l as r}from"./index-xlnITM3P.js";import{S as l}from"./stats-J8gw5Se4.js";import"./v-lodash-Dtxmn3UF.js";import"./v-echarts-BO3Y36ks.js";import"./v-prosemirror-Cp-VVqB4.js";import"./v-@sentry-DA5FXZpo.js";function E({players:x,limit:d,filterExtendedStatsByGamesPlayed:i}){const s=x.filter(e=>e.extendedStats),a=i?g:F,o=i?2:0,m=s.reduce((e,n)=>e+n.extendedStats.chickens.killed,0),j={Knifed:s.reduce((e,n)=>e+n.extendedStats.chickens.stabbed,0),Roasted:s.reduce((e,n)=>e+n.extendedStats.chickens.roasted,0),Exploded:s.reduce((e,n)=>e+n.extendedStats.chickens.exploded,0),Shot:s.reduce((e,n)=>e+n.extendedStats.chickens.shot,0)},b=a(s,"extendedStats.chickens.killed",d,"desc").map(e=>({player:e,value:e.extendedStats.chickens.killed.toFixed(o)})),k=a(s,"extendedStats.trackedObj.ninjaDefuses",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.ninjaDefuses.toFixed(o)})),h=a(s,"extendedStats.trackedObj.noScopesKills",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.noScopesKills.toFixed(o)})),u=a(s,"extendedStats.trackedObj.wallBangKills",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.wallBangKills.toFixed(o)})),S=a(s,"extendedStats.trackedObj.smokeKills",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.smokeKills.toFixed(o)})),f=a(s,"extendedStats.trackedObj.airborneKills",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.airborneKills.toFixed(o)})),p=a(s,"extendedStats.trackedObj.bombsPlanted",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.bombsPlanted.toFixed(o)})),v=a(s,"extendedStats.trackedObj.bombsDefused",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.bombsDefused.toFixed(o)})),w=a(s,"extendedStats.trackedObj.diedToBomb",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.diedToBomb.toFixed(o)})),K=a(s,"extendedStats.trackedObj.mvpCount",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.mvpCount.toFixed(o)})),O=a(s,"extendedStats.trackedObj.teamKills",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.teamKills.toFixed(o)})),B=a(s,"extendedStats.trackedObj.selfKills",d,"desc").map(e=>({player:e,value:e.extendedStats.trackedObj.selfKills.toFixed(o)})),c=i?"Per Match":"";return t.jsx(N,{children:x.length?t.jsxs(t.Fragment,{children:[t.jsx("div",{className:"flex",children:t.jsxs("div",{className:"flex flex-row flex-wrap w-full",children:[t.jsxs("div",{className:"flex flex-col",children:[t.jsxs("div",{children:[t.jsxs("div",{className:"text-3xl text-center m-4",children:[t.jsx("img",{className:"m-auto h-16 w-16",src:L,alt:"Chickens"}),"killed"]}),t.jsx("div",{className:"text-6xl text-center m-4 pt-4",children:m})]}),t.jsx("div",{className:"flex flex-row flex-wrap",children:Object.entries(j).map(([e,n])=>t.jsxs("div",{className:"text-l text-center m-auto w-32",children:[t.jsx("div",{children:e}),t.jsx("div",{className:"text-center",children:n})]}))})]}),t.jsx(l,{title:"Chickens Killed",rows:b})]})}),t.jsxs("div",{className:"flex flex-row flex-wrap m-auto gap-4",children:[t.jsx(l,{title:"Ninja Defuses",subtitle:c,rows:k}),t.jsx(l,{title:"No Scopes",subtitle:c,rows:h,headerImage:r.noScope}),t.jsx(l,{title:"Wall Bangs",subtitle:c,rows:u,headerImage:r.wallBang}),t.jsx(l,{title:"Smoke Kills",subtitle:c,rows:S,headerImage:r.smokeKill}),t.jsx(l,{title:"Airborne Kills",subtitle:c,rows:f,headerImage:r.airborne}),t.jsx(l,{title:"Bombs Planted",subtitle:c,rows:p}),t.jsx(l,{title:"Bombs Defused",subtitle:c,rows:v}),t.jsx(l,{title:"Died To Bomb",subtitle:c,rows:w}),t.jsx(l,{title:"MVPs",subtitle:c,rows:K}),t.jsx(l,{title:"Team Kills",subtitle:c,rows:O}),t.jsx(l,{title:"Self Kills",subtitle:c,rows:B,headerImage:r.suicide})]})]}):t.jsx("div",{className:"w-full m-4 text-center text-2xl text-gray-500 font-extrabold uppercase",children:"No Players seem to meet the criteria."})})}export{E as ExtendedLeaderboards};
