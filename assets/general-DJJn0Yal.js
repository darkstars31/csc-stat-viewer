import{j as s}from"./v-react-rX0g8Rbv.js";import{S as o}from"./stats-PcDjddtv.js";import{_ as l,i as C}from"./index-LGHMlK7-.js";import"./v-lodash-Dtxmn3UF.js";import"./v-echarts-BO3Y36ks.js";import"./v-prosemirror-Cp-VVqB4.js";import"./v-@sentry-DA5FXZpo.js";function _(e,a,c){return{player:e,value:e.stats[c]}}function L({players:e,limit:a}){const c=l(e,"stats.gameCount",a,"desc").map(t=>_(t,"Games Played","gameCount")),n=l(e,"stats.kills",a,"desc").map(t=>({player:t,value:t.stats.kills})),u=e.sort((t,r)=>t.stats.kills/t.stats.deaths<r.stats.kills/r.stats.deaths?1:-1).slice(0,a).map(t=>({player:t,value:(t.stats.kills/t.stats.deaths).toFixed(2)})),d=e.sort((t,r)=>t.stats.fiveK<r.stats.fiveK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.fiveK})),x=e.sort((t,r)=>t.stats.twoK<r.stats.twoK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.twoK})),h=e.sort((t,r)=>t.stats.threeK<r.stats.threeK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.threeK})),w=e.sort((t,r)=>t.stats.fourK<r.stats.fourK?1:-1).slice(0,a).map(t=>({player:t,value:t.stats.fourK})),v=l(e,"stats.adr",a,"desc").map(t=>({player:t,value:t.stats.adr.toFixed(2)})),m=l(e,"stats.awpR",a,"desc").map(t=>({player:t,value:t.stats.awpR.toFixed(2)})),j=l(e,"stats.utilDmg",a,"desc").map(t=>({player:t,value:t.stats.utilDmg.toFixed(2)})),g=l(e,"stats.ctRating",a,"desc").map(t=>({player:t,value:t.stats.ctRating.toFixed(2)})),f=l(e,"stats.TRating",a,"desc").map(t=>({player:t,value:t.stats.TRating.toFixed(2)})),p=l(e,"stats.kast",a,"desc").map(t=>({player:t,value:t.stats.kast.toFixed(2)})),i=l(e,"stats.util"),K=i.map(t=>({player:t,value:t.stats.util})).reverse().splice(0,a),R=i.map(t=>({player:t,value:t.stats.util})).splice(0,a),F=l(e,"stats.hs",a,"desc").map(t=>({player:t,value:t.stats.hs})),P=l(e,"stats.clutchR",a,"desc").map(t=>({player:t,value:t.stats.clutchR.toFixed(2)})),M=l(e,"stats.cl_2",a,"desc").map(t=>({player:t,value:t.stats.cl_2.toFixed(0)})),T=l(e,"stats.cl_3",a,"desc").map(t=>({player:t,value:t.stats.cl_3.toFixed(0)})),k=l(e,"stats.cl_4",a,"desc").map(t=>({player:t,value:t.stats.cl_4.toFixed(0)})),A=l(e,"stats.odr",a,"desc").map(t=>({player:t,value:t.stats.odr.toFixed(2)})),D=l(e,"stats.fAssists",a,"desc").map(t=>({player:t,value:t.stats.fAssists.toFixed(2)})),y=l(e,"stats.ef",a,"desc").map(t=>({player:t,value:t.stats.ef.toFixed(2)}));return s.jsx(C,{children:e.length?s.jsx("div",{className:"flex",children:s.jsxs("div",{className:"flex flex-row flex-wrap w-full gap-6",children:[s.jsx(o,{title:"Games Played",rows:c}),s.jsx(o,{title:"Most Kills",rows:n}),s.jsx(o,{title:"Highest K/D Ratio",rows:u}),s.jsx(o,{title:"Most Aces",rows:d}),s.jsx(o,{title:"Damager Per Round",rows:v}),s.jsx(o,{title:"Most 2K's",rows:x}),s.jsx(o,{title:"Most 3K's",rows:h}),s.jsx(o,{title:"Most 4K's",rows:w}),s.jsx(o,{title:"Flash Assists per Match",rows:D}),s.jsx(o,{title:"Awp Kills per Round",rows:m}),s.jsx(o,{title:"Utility Damage per Match",rows:j}),s.jsx(o,{title:"CT-Side Rating",rows:g}),s.jsx(o,{title:"T-Side Rating",rows:f}),s.jsx(o,{title:"Kill/Assist/Survive/Traded",rows:p}),s.jsx(o,{title:"Utility Thrown Per Match",rows:K}),s.jsx(o,{title:"Least Utility Thrown Per Match",rows:R}),s.jsx(o,{title:"Highest Headshot Percentage",rows:F}),s.jsx(o,{title:"Clutch Points Average per Match",rows:P}),s.jsx(o,{title:"One vs Two Clutch",rows:M}),s.jsx(o,{title:"One vs Three Clutch",rows:T}),s.jsx(o,{title:"One vs Four Clutch",rows:k}),s.jsx(o,{title:"Open Duels Per Round",rows:A}),s.jsx(o,{title:"Enemies Flashed per Match",rows:y})]})}):s.jsx("div",{className:"w-full m-4 text-center text-2xl text-gray-500 font-extrabold uppercase",children:"No Players seem to meet the criteria."})})}export{L as GeneralLeaderBoards};
